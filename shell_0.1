#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <unistd.h>
#include <sys/wait.h>

#define MAX_COMMAND_LENGTH 100
#define MAX_ARGUMENTS 10

/**
 * main - program entry point
 *
 * Return: 0 (Success), 1 (Failure)
 */

int main(void)
{
	char command[MAX_COMMAND_LENGTH];
	char *args[MAX_ARGUMENTS + 2];
	int status;

	while (1)
	{
		printf("($) ");

	if (fgets(command, MAX_COMMAND_LENGTH, stdin) == NULL)
	{
		printf("\n");
		break;
	}
	int num_args = 0;
	args[num_args++] = strtok(command, " \n");
	while (args[num_args - 1] != NULL && num_args <= MAX_ARGUMENTS)
	{
		args[num_args++] = strtok(NULL, " \n");
	}

	if (num_args > MAX_ARGUMENTS + 1)
	{
	printf("Input a maximum of %d arguments.\n", MAX_ARGUMENTS);
	continue;
	}

	pid_t pid = fork();

	if (pid == -1)
	{
	perror("Fork error");
	return(1);
	}
	else if (pid == 0)
	{
		if (execve(args[0], args, NULL) == -1)
		{
			printf("Command not found: %s\n", args[0]);
			return(1);
		}
	}
	else
	{
		waitpid(pid, &status, 0);
	}
	}
return (0);
}
